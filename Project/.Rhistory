data1 <- merge(w,country,by.x="region",by.y="Entity")
year = 2019
data_2019 <- subset(data1, data1$Year == 2019)
View(data_2019)
View(data_merge)
grouped_data <- data1 %>% group_by(data1$Year == year)
View(grouped_data)
grouped_data <- data1 %>% group_by(data1$Year == year, Entity)
grouped_data <- data1 %>% group_by(data1$Year == year, data1$Entity)
View(grouped_data)
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Year == year,]
sum(deaths_by_year$Smoking)
}
# Call the function by passing in the desired year
sum_deaths_by_year(2019)
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Year == year,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Entity), sum)
colnames(deaths_by_country) <- c("country", "deaths")
deaths_by_country
}
# Call the function by passing in the desired year
sum_deaths_by_year(2019)
deaths_by_year
deaths_by_year <- data1[data1$Year == year,]
deaths_by_year
View(deaths_by_year)
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Year == year,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$region), sum)
colnames(deaths_by_country) <- c("country", "deaths")
deaths_by_country
}
# Call the function by passing in the desired year
sum_deaths_by_year(2019)
w <- map_data('world')
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- merge(w,country,by.x="region",by.y="Entity")
View(data1)
w <- map_data('world')
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- left_join(w,country,by.x="region",by.y="Entity")
# World map
w <- map_data('world', region = c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- left_join(w,country,by.x="region",by.y="Entity")
c <- read.csv(file.choose(), header =T)
c_grouped <- c %>% group_by(Entity)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- merge(w,country,by.x="region",by.y="Entity")
data1 <- data1[!duplicated(data1), ]
View(data1)
c <- read.csv(file.choose(), header =T)
c_grouped <- c %>% group_by(Entity)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- merge(w,country,by.x="region",by.y="Entity")
data1 <- data1[!duplicated(data1), ]
View(data1)
c <- read.csv(file.choose(), header =T)
c_grouped <- c %>% group_by(Entity)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- inner_join(w,country,by.x="region",by.y="Entity")
View(country)
View(w)
c <- read.csv(file.choose(), header =T)
c_grouped <- c %>% group_by(Entity)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- inner_join(country,w,by.x="Entity",by.y="region")
data1 <- merge(country,w,by.x="Entity",by.y="region")
View(data1)
data1 <- data1[!duplicated(data1), ]
data1 <- data1[!duplicated(data1), ]
c <- read.csv(file.choose(), header =T)
c_grouped <- c %>% group_by(Entity)
country <- c %>% filter(Entity == c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
data1 <- merge(country,w,by.x="Entity",by.y="region")
dup_rows <- duplicated(data1, by = "Year")
df_unique <- data1[!dup_rows, ]
View(df_unique)
library(sf)
# World map
w <- map_data('world', region= c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
library(dplyr)
library(sf)
# World map
w <- map_data('world', region= c('India','Afghanistan','Algeria','Australia','Argentina','South Africa','China'))
ggplot(w, aes(x = long, y = lat, group = group, fill=region)) +
geom_polygon(color = 'black') +
guides(fill = F)
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == 'India')
data1 <- merge(country,w,by.x="Entity",by.y="region")
View(data1)
dup_rows <- duplicated(data1, by = "Year")
dup_rows
data1 <- merge(country,w[, c("region", "latitude", "longitude")],by.x="Entity",by.y="region")
data1 <- merge(country,w[, c("region", "lat", "long")],by.x="Entity",by.y="region")
View(data1)
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("country", "deaths")
deaths_by_country
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
deaths_by_country
ggplot(deaths_by_country, aes(x=data1$long, y=data1$lat,fill=deaths)) + geom_polygon()
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
ggplot(deaths_by_country, aes(x=data1$long, y=data1$lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
ggplot(deaths_by_country, aes(x=data1$long, y=data1$lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
deaths_by_country
sum_deaths_by_year <- function(year) {
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
deaths_by_country
#ggplot(deaths_by_country, aes(x=d$long, y=data1$lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
sum_deaths_by_year <- function(val) {
deaths_by_year <- data1[data1$Entity == val,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
deaths_by_country
#ggplot(deaths_by_country, aes(x=d$long, y=data1$lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
View(deaths_by_country)
sum_deaths_by_year <- function(val) {
deaths_by_year <- data1[data1$Entity == val,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
#ggplot(deaths_by_country, aes(x=d$long, y=data1$lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
sum_deaths_by_year <- function(val) {
deaths_by_year <- data1[data1$Entity == val,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
ggplot(deaths_by_country, aes(x=long, y=lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
library(dplyr)
library(sf)
# World map
w <- map_data('world', region= 'India')
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == 'India')
data1 <- merge(country,w[, c("region", "lat", "long")],by.x="Entity",by.y="region")
sum_deaths_by_year <- function(val) {
deaths_by_year <- data1[data1$Entity == val,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
ggplot(deaths_by_country, aes(x=long, y=lat,fill=deaths)) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
data1 <- merge(country,w[, c("region", "lat", "long")],by.x="Entity",by.y="region")
sum_deaths_by_year <- function(val) {
deaths_by_year <- data1[data1$Entity == val,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
ggplot(deaths_by_country, aes(x=long, y=lat,fill=unique(deaths))) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
sum_deaths_by_year <- function(val) {
deaths_by_year <- data1[data1$Entity == val,]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
ggplot(deaths_by_country, aes(x=unique(long), y=unique(lat),fill=unique(deaths))) + geom_polygon()
}
# Call the function by passing in the desired year
sum_deaths_by_year('India')
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = deaths_by_country$deaths)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global") +
plain
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
library(dplyr)
library(sf)
# World map
w <- map_data('world', region= 'India')
ggplot(w, aes(x = long, y = lat, group = group, fill=region)) +
geom_polygon(color = 'black') +
guides(fill = F)
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == 'India')
data1 <- merge(country,w[, c("region", "lat", "long", "group")],by.x="Entity",by.y="region")
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = deaths_by_country$deaths)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global") +
plain
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
var <- ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = deaths_by_country$deaths)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global")
var
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
var <- ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = deaths)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global")
var
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
library(dplyr)
library(sf)
# World map
w <- map_data('world')
ggplot(w, aes(x = long, y = lat, group = group, fill=region)) +
geom_polygon(color = 'black') +
guides(fill = F)
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == 'India')
data1 <- merge(country,w[, c("region", "lat", "long", "group")],by.x="Entity",by.y="region")
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
var <- ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = deaths)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global")
var
View(data1)
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
library(dplyr)
library(sf)
# World map
w <- map_data('world')
ggplot(w, aes(x = long, y = lat, group = group, fill=region)) +
geom_polygon(color = 'black') +
guides(fill = F)
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == 'India')
data1 <- merge(country,w[, c("region", "lat", "long", "group")],by.x="Entity",by.y="region")
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
var <- ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = deaths)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global") + plain
var
library(ggplot2)
library(maps)
library(mapdata)
library(mapproj)
library(dplyr)
library(sf)
# World map
w <- map_data('world')
ggplot(w, aes(x = long, y = lat, group = group, fill=region)) +
geom_polygon(color = 'black') +
guides(fill = F)
c <- read.csv(file.choose(), header =T)
country <- c %>% filter(Entity == 'India')
data1 <- merge(country,w[, c("region", "lat", "long", "group")],by.x="Entity",by.y="region")
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
var <- ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = lat)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global") + plain
var
View(var)
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
deaths_by_year <- data1[data1$Entity == 'India',]
deaths_by_country <- aggregate(deaths_by_year$Smoking, by = list(deaths_by_year$Year), sum)
colnames(deaths_by_country) <- c("Year", "deaths")
deaths_by_country
deaths_by_country <- merge(data1,deaths_by_country,by="Year")
View(deaths_by_country)
var <- ggplot(data = deaths_by_country,mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(aes(fill = group)) +
scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
ggtitle("Global") + plain
var
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
install.packages("shinyalert")
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/Risk_Factors.R')
runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
library(shiny); runApp('C:/Users/HP/Desktop/Shiny/Exercises/Project/IPL_Analysis - Copy.R')
